<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="2" failed="0" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="439" started-at="2018-06-01T12:14:09Z" finished-at="2018-06-01T12:14:09Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="439" started-at="2018-06-01T12:14:09Z" finished-at="2018-06-01T12:14:09Z">
      <class name="runner.WaveReport">
        <test-method status="FAIL" signature="Browser(java.lang.String)[pri:0, instance:runner.WaveReport@91161c7]" name="Browser" is-config="true" duration-ms="0" started-at="2018-06-01T17:44:09Z" finished-at="2018-06-01T17:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
	at com.google.common.base.Preconditions.checkState(Preconditions.java:754)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:124)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:33)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:139)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:339)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:89)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:147)
	at library.DataProviderBean.SelectBrowser(DataProviderBean.java:88)
	at runner.WaveReport.Browser(WaveReport.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:648)
	at org.testng.TestRunner.run(TestRunner.java:616)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Browser -->
        <test-method status="SKIP" signature="waveReport(java.lang.String)[pri:0, instance:runner.WaveReport@91161c7]" name="waveReport" duration-ms="0" started-at="2018-06-01T17:44:09Z" data-provider="DataFeeder" finished-at="2018-06-01T17:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[beckman.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waveReport -->
        <test-method status="SKIP" signature="close()[pri:0, instance:runner.WaveReport@91161c7]" name="close" is-config="true" duration-ms="0" started-at="2018-06-01T17:44:09Z" finished-at="2018-06-01T17:44:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- close -->
        <test-method status="SKIP" signature="waveReport(java.lang.String)[pri:0, instance:runner.WaveReport@91161c7]" name="waveReport" duration-ms="0" started-at="2018-06-01T17:44:09Z" data-provider="DataFeeder" finished-at="2018-06-01T17:44:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[duanemorris.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waveReport -->
      </class> <!-- runner.WaveReport -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
